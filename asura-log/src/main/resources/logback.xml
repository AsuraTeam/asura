<?xml version="1.0" encoding="UTF-8"?>
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
     scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。-->
<configuration debug="false" scan="true" scanPeriod="60 seconds">

	<contextName>com.ziroom.sms</contextName>
	<property name="log.base" value="/home/ziroom/sms/logs"/>

	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 日志输出编码 -->
		<Encoding>UTF-8</Encoding>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
			</pattern>
		</layout>
	</appender>

	<!-- 代码中无需显示使用日志：输出proxy参数、返回值，以及service中方法抛出异常的日志 -->
	<appender name="accessAppender"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<Encoding>UTF-8</Encoding>
		<File>${log.base}/access_data.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log.base}/access_data-%d{yyyyMMdd}.log</fileNamePattern>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] [%t] [%X{address}] [%X{service}.%X{method}] %C{0}.%M - %m%n
			</pattern>
		</layout>
	</appender>


	<!-- 代码中需显示使用日志：输出正常的业务逻辑日志 -->
	<appender name="bizAppender"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<Encoding>UTF-8</Encoding>
		<File>${log.base}/sms_biz.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log.base}/sms_biz-%d{yyyyMMdd}.log</fileNamePattern>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<!--格式化输出,%d:日期;%thread:线程名;%-5level：级别,从左显示5个字符宽度;%msg:日志消息;%n:换行符-->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</layout>
	</appender>

	<!--myibatis log configure-->
	<!--
        没有设置appender 将会继承上级(root)的appender root为顶级，
        级别按包来分，如 [root] [org] [org.apache] [org.apache.ibatis]  additivity="false"
    -->
	<!--没有设置appender 将会继承上级(root)的appender-->
	<logger name="org.springframework" level="INFO"/>

	<logger name="com.asura" level="INFO">
		<appender-ref ref="STDOUT"/>
	</logger>

	<logger name="com.ziroom" level="INFO">
		<appender-ref ref="STDOUT"/>
	</logger>

	<root level="INFO">
		<appender-ref ref="STDOUT"/>
	</root>
</configuration>